name: Daily Commit Report (All Branches)

on:
  schedule:
    - cron: '0 6 * * *'  # Runs daily at 6 AM IST (~12:30 AM UTC)
  workflow_dispatch:

jobs:
  commit-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install requests
        run: pip install requests

      - name: Run Commit Reporter Script
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          python <<EOF
          import os
          import requests
          from datetime import datetime, timedelta

          GH_TOKEN = os.getenv("GH_TOKEN")
          TEAMS_WEBHOOK_URL = os.getenv("TEAMS_WEBHOOK_URL")
          headers = {
              "Authorization": f"Bearer {GH_TOKEN}",
              "Accept": "application/vnd.github+json"
          }

          since = (datetime.utcnow() - timedelta(days=1)).isoformat() + "Z"

          with open("repos.txt", "r") as f:
              repos = [line.strip() for line in f if line.strip()]

          blocks = []

          for repo in repos:
              owner, name = repo.split("/")
              commit_lines = []
              seen_commits = set()

              # Get all branches
              branches_url = f"https://api.github.com/repos/{owner}/{name}/branches"
              branches_response = requests.get(branches_url, headers=headers)
              branches = branches_response.json()

              if isinstance(branches, dict) and 'message' in branches:
                  blocks.append(f"### {repo}\n⚠️ Error fetching branches: {branches.get('message')}\n")
                  continue

              for branch in branches:
                  branch_name = branch["name"]
                  commits_url = f"https://api.github.com/repos/{owner}/{name}/commits?sha={branch_name}&since={since}"
                  commits_response = requests.get(commits_url, headers=headers)
                  commits = commits_response.json()

                  if isinstance(commits, dict) and 'message' in commits:
                      continue

                  for c in commits:
                      sha = c["sha"]
                      if sha in seen_commits:
                          continue
                      seen_commits.add(sha)
                      title = c["commit"]["message"].splitlines()[0]
                      author = c["commit"]["author"]["name"]
                      link = c["html_url"]
                      commit_lines.append(f"- [{title}]({link}) by **{author}** on `{branch_name}`")

              if commit_lines:
                  blocks.append(f"### {repo}\n" + "\n".join(commit_lines))
              else:
                  blocks.append(f"### {repo}\nNo commits in the last 24 hours across all branches.\n")

          message = "\n\n".join(blocks)
          payload = {
              "text": f"📊 *GitHub Daily Commit Report* ({datetime.utcnow().date()})\n\n{message}"
          }

          response = requests.post(TEAMS_WEBHOOK_URL, json=payload)
          if response.status_code != 200:
              print("Failed to send message to Teams:", response.text)
          EOF
