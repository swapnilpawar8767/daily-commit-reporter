name: Daily Commit Report

on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM IST
  workflow_dispatch:

jobs:
  commit-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Run commit reporter script
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          python <<EOF
          import os
          import requests
          from datetime import datetime, timedelta

          GH_TOKEN = os.getenv("GH_TOKEN")
          TEAMS_WEBHOOK_URL = os.getenv("TEAMS_WEBHOOK_URL")

          headers = {
              "Authorization": f"Bearer {GH_TOKEN}",
              "Accept": "application/vnd.github+json"
          }

          since = (datetime.utcnow() - timedelta(days=1)).isoformat() + "Z"

          with open("repos.txt", "r") as f:
              repos = [line.strip() for line in f if line.strip()]

          report_lines = []

          for repo in repos:
              owner, name = repo.split("/")
              url = f"https://api.github.com/repos/{owner}/{name}/commits?since={since}"
              r = requests.get(url, headers=headers)
              commits = r.json()

              if not commits or isinstance(commits, dict) and 'message' in commits:
                  report_lines.append(f"### 📁 {repo}\n_No commits in the last 24 hours._\n")
                  continue

              report_lines.append(f"### 📁 {repo}")
              for commit in commits:
                  message = commit['commit']['message'].splitlines()[0]
                  author = commit['commit']['author']['name']
                  commit_url = commit['html_url']
                  report_lines.append(f"- [{message}]({commit_url}) by **{author}**")
              report_lines.append("")  # Blank line between repos

          final_message = f"📊 **GitHub Daily Commit Report** ({datetime.utcnow().date()})\n\n" + "\n".join(report_lines)

          payload = {
              "text": final_message
          }

          r = requests.post(TEAMS_WEBHOOK_URL, json=payload)
          if r.status_code != 200:
              print(f"Failed to send message: {r.status_code} - {r.text}")
          EOF
