name: Daily Commit Report

on:
  schedule:
    - cron: '0 6 * * *'  # Runs daily at 6 AM IST (~12:30 AM UTC)
  workflow_dispatch:

jobs:
  commit-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install requests
        run: pip install requests

      - name: Run Commit Reporter Script
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          python <<EOF
          import os
          import requests
          from datetime import datetime, timedelta
          
          GH_TOKEN = os.getenv("GH_TOKEN")
          TEAMS_WEBHOOK_URL = os.getenv("TEAMS_WEBHOOK_URL")
          headers = {
              "Authorization": f"Bearer {GH_TOKEN}",
              "Accept": "application/vnd.github+json"
          }

          since = (datetime.utcnow() - timedelta(days=1)).isoformat() + "Z"

          with open("repos.txt", "r") as f:
              repos = [line.strip() for line in f if line.strip()]

          blocks = []
          for repo in repos:
              owner, name = repo.split("/")
              url = f"https://api.github.com/repos/{owner}/{name}/commits?since={since}"
              r = requests.get(url, headers=headers)
              commits = r.json()
              
              if not commits or 'message' in commits:
                  blocks.append(f"### {repo}\nNo commits in the last 24 hours.\n")
                  continue

              commit_lines = [f"- [{c['commit']['message'].splitlines()[0]}]({c['html_url']}) by **{c['commit']['author']['name']}**"
                              for c in commits]
              blocks.append(f"### {repo}\n" + "\n".join(commit_lines))

          message = "\n\n".join(blocks)

          payload = {
              "text": f"ðŸ“Š *GitHub Daily Commit Report* ({datetime.utcnow().date()})\n\n{message}"
          }

          requests.post(TEAMS_WEBHOOK_URL, json=payload)
          EOF
